// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mailnotification.proto

package mailnotificationproto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NoReplyMessage struct {
	RepName              string   `protobuf:"bytes,1,opt,name=rep_name,json=repName,proto3" json:"rep_name,omitempty"`
	RepEmail             string   `protobuf:"bytes,2,opt,name=rep_email,json=repEmail,proto3" json:"rep_email,omitempty"`
	Subj                 string   `protobuf:"bytes,3,opt,name=subj,proto3" json:"subj,omitempty"`
	Body                 string   `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NoReplyMessage) Reset()         { *m = NoReplyMessage{} }
func (m *NoReplyMessage) String() string { return proto.CompactTextString(m) }
func (*NoReplyMessage) ProtoMessage()    {}
func (*NoReplyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_b77f05b6cc185261, []int{0}
}

func (m *NoReplyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NoReplyMessage.Unmarshal(m, b)
}
func (m *NoReplyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NoReplyMessage.Marshal(b, m, deterministic)
}
func (m *NoReplyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoReplyMessage.Merge(m, src)
}
func (m *NoReplyMessage) XXX_Size() int {
	return xxx_messageInfo_NoReplyMessage.Size(m)
}
func (m *NoReplyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_NoReplyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_NoReplyMessage proto.InternalMessageInfo

func (m *NoReplyMessage) GetRepName() string {
	if m != nil {
		return m.RepName
	}
	return ""
}

func (m *NoReplyMessage) GetRepEmail() string {
	if m != nil {
		return m.RepEmail
	}
	return ""
}

func (m *NoReplyMessage) GetSubj() string {
	if m != nil {
		return m.Subj
	}
	return ""
}

func (m *NoReplyMessage) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type MessagingToken struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Platform             string   `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	Token                string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	Domain               string   `protobuf:"bytes,5,opt,name=domain,proto3" json:"domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessagingToken) Reset()         { *m = MessagingToken{} }
func (m *MessagingToken) String() string { return proto.CompactTextString(m) }
func (*MessagingToken) ProtoMessage()    {}
func (*MessagingToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_b77f05b6cc185261, []int{1}
}

func (m *MessagingToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessagingToken.Unmarshal(m, b)
}
func (m *MessagingToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessagingToken.Marshal(b, m, deterministic)
}
func (m *MessagingToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessagingToken.Merge(m, src)
}
func (m *MessagingToken) XXX_Size() int {
	return xxx_messageInfo_MessagingToken.Size(m)
}
func (m *MessagingToken) XXX_DiscardUnknown() {
	xxx_messageInfo_MessagingToken.DiscardUnknown(m)
}

var xxx_messageInfo_MessagingToken proto.InternalMessageInfo

func (m *MessagingToken) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MessagingToken) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *MessagingToken) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *MessagingToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *MessagingToken) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

type PushRequest struct {
	Domain               string            `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Target               string            `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Notification         bool              `protobuf:"varint,3,opt,name=notification,proto3" json:"notification,omitempty"`
	Title                string            `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Body                 string            `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	ImgUrl               string            `protobuf:"bytes,6,opt,name=imgUrl,proto3" json:"imgUrl,omitempty"`
	Data                 map[string]string `protobuf:"bytes,7,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PushRequest) Reset()         { *m = PushRequest{} }
func (m *PushRequest) String() string { return proto.CompactTextString(m) }
func (*PushRequest) ProtoMessage()    {}
func (*PushRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b77f05b6cc185261, []int{2}
}

func (m *PushRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushRequest.Unmarshal(m, b)
}
func (m *PushRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushRequest.Marshal(b, m, deterministic)
}
func (m *PushRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushRequest.Merge(m, src)
}
func (m *PushRequest) XXX_Size() int {
	return xxx_messageInfo_PushRequest.Size(m)
}
func (m *PushRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushRequest proto.InternalMessageInfo

func (m *PushRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *PushRequest) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *PushRequest) GetNotification() bool {
	if m != nil {
		return m.Notification
	}
	return false
}

func (m *PushRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *PushRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *PushRequest) GetImgUrl() string {
	if m != nil {
		return m.ImgUrl
	}
	return ""
}

func (m *PushRequest) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

type NotificationSetting struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Promotion            bool     `protobuf:"varint,2,opt,name=promotion,proto3" json:"promotion,omitempty"`
	OrderStatus          bool     `protobuf:"varint,3,opt,name=orderStatus,proto3" json:"orderStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotificationSetting) Reset()         { *m = NotificationSetting{} }
func (m *NotificationSetting) String() string { return proto.CompactTextString(m) }
func (*NotificationSetting) ProtoMessage()    {}
func (*NotificationSetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_b77f05b6cc185261, []int{3}
}

func (m *NotificationSetting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotificationSetting.Unmarshal(m, b)
}
func (m *NotificationSetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotificationSetting.Marshal(b, m, deterministic)
}
func (m *NotificationSetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotificationSetting.Merge(m, src)
}
func (m *NotificationSetting) XXX_Size() int {
	return xxx_messageInfo_NotificationSetting.Size(m)
}
func (m *NotificationSetting) XXX_DiscardUnknown() {
	xxx_messageInfo_NotificationSetting.DiscardUnknown(m)
}

var xxx_messageInfo_NotificationSetting proto.InternalMessageInfo

func (m *NotificationSetting) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *NotificationSetting) GetPromotion() bool {
	if m != nil {
		return m.Promotion
	}
	return false
}

func (m *NotificationSetting) GetOrderStatus() bool {
	if m != nil {
		return m.OrderStatus
	}
	return false
}

type RequestOTP struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestOTP) Reset()         { *m = RequestOTP{} }
func (m *RequestOTP) String() string { return proto.CompactTextString(m) }
func (*RequestOTP) ProtoMessage()    {}
func (*RequestOTP) Descriptor() ([]byte, []int) {
	return fileDescriptor_b77f05b6cc185261, []int{4}
}

func (m *RequestOTP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestOTP.Unmarshal(m, b)
}
func (m *RequestOTP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestOTP.Marshal(b, m, deterministic)
}
func (m *RequestOTP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestOTP.Merge(m, src)
}
func (m *RequestOTP) XXX_Size() int {
	return xxx_messageInfo_RequestOTP.Size(m)
}
func (m *RequestOTP) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestOTP.DiscardUnknown(m)
}

var xxx_messageInfo_RequestOTP proto.InternalMessageInfo

func (m *RequestOTP) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RequestOTP) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type ValidateOTP struct {
	Otp                  string   `protobuf:"bytes,1,opt,name=otp,proto3" json:"otp,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateOTP) Reset()         { *m = ValidateOTP{} }
func (m *ValidateOTP) String() string { return proto.CompactTextString(m) }
func (*ValidateOTP) ProtoMessage()    {}
func (*ValidateOTP) Descriptor() ([]byte, []int) {
	return fileDescriptor_b77f05b6cc185261, []int{5}
}

func (m *ValidateOTP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateOTP.Unmarshal(m, b)
}
func (m *ValidateOTP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateOTP.Marshal(b, m, deterministic)
}
func (m *ValidateOTP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateOTP.Merge(m, src)
}
func (m *ValidateOTP) XXX_Size() int {
	return xxx_messageInfo_ValidateOTP.Size(m)
}
func (m *ValidateOTP) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateOTP.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateOTP proto.InternalMessageInfo

func (m *ValidateOTP) GetOtp() string {
	if m != nil {
		return m.Otp
	}
	return ""
}

func (m *ValidateOTP) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type ValidateOTPResult struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateOTPResult) Reset()         { *m = ValidateOTPResult{} }
func (m *ValidateOTPResult) String() string { return proto.CompactTextString(m) }
func (*ValidateOTPResult) ProtoMessage()    {}
func (*ValidateOTPResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_b77f05b6cc185261, []int{6}
}

func (m *ValidateOTPResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateOTPResult.Unmarshal(m, b)
}
func (m *ValidateOTPResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateOTPResult.Marshal(b, m, deterministic)
}
func (m *ValidateOTPResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateOTPResult.Merge(m, src)
}
func (m *ValidateOTPResult) XXX_Size() int {
	return xxx_messageInfo_ValidateOTPResult.Size(m)
}
func (m *ValidateOTPResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateOTPResult.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateOTPResult proto.InternalMessageInfo

func (m *ValidateOTPResult) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func init() {
	proto.RegisterType((*NoReplyMessage)(nil), "mailnotificationproto.NoReplyMessage")
	proto.RegisterType((*MessagingToken)(nil), "mailnotificationproto.MessagingToken")
	proto.RegisterType((*PushRequest)(nil), "mailnotificationproto.PushRequest")
	proto.RegisterMapType((map[string]string)(nil), "mailnotificationproto.PushRequest.DataEntry")
	proto.RegisterType((*NotificationSetting)(nil), "mailnotificationproto.NotificationSetting")
	proto.RegisterType((*RequestOTP)(nil), "mailnotificationproto.RequestOTP")
	proto.RegisterType((*ValidateOTP)(nil), "mailnotificationproto.ValidateOTP")
	proto.RegisterType((*ValidateOTPResult)(nil), "mailnotificationproto.ValidateOTPResult")
}

func init() {
	proto.RegisterFile("mailnotification.proto", fileDescriptor_b77f05b6cc185261)
}

var fileDescriptor_b77f05b6cc185261 = []byte{
	// 900 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x4f, 0x6f, 0xdc, 0x44,
	0x14, 0xaf, 0xbd, 0xf9, 0xfb, 0x82, 0x42, 0x3a, 0x40, 0xb2, 0xd9, 0xe4, 0xe0, 0x5a, 0x20, 0x45,
	0x4b, 0xd7, 0x2e, 0x4b, 0xa4, 0x56, 0xe1, 0x52, 0x22, 0x72, 0x00, 0x29, 0x69, 0xe4, 0x6e, 0xe1,
	0x84, 0xd0, 0xac, 0xfd, 0xe2, 0x9d, 0xc6, 0xf6, 0x4c, 0x67, 0xc6, 0x29, 0x2b, 0xfe, 0x1c, 0x90,
	0x10, 0x57, 0x04, 0x37, 0x0e, 0x95, 0xf8, 0x36, 0xdc, 0xf9, 0x0a, 0x7c, 0x10, 0x34, 0x63, 0xef,
	0xc6, 0x21, 0x71, 0x2b, 0x54, 0xf5, 0xe4, 0x79, 0x6f, 0xde, 0xfb, 0xbd, 0xdf, 0x7b, 0xf3, 0x7e,
	0x86, 0xcd, 0x9c, 0xb2, 0xac, 0xe0, 0x9a, 0x9d, 0xb1, 0x98, 0x6a, 0xc6, 0x8b, 0x40, 0x48, 0xae,
	0x39, 0x79, 0xef, 0xbf, 0x7e, 0xeb, 0xee, 0xed, 0xa6, 0x9c, 0xa7, 0x19, 0x86, 0x54, 0xb0, 0x90,
	0x16, 0x05, 0xd7, 0xf6, 0x4e, 0x55, 0x49, 0xbd, 0xbb, 0xf6, 0x13, 0x0f, 0x52, 0x2c, 0x06, 0xea,
	0x39, 0x4d, 0x53, 0x94, 0x21, 0x17, 0x36, 0xe2, 0x86, 0xe8, 0x9d, 0x1a, 0xcb, 0x5a, 0xe3, 0xf2,
	0x2c, 0xc4, 0x5c, 0xe8, 0x69, 0x75, 0xe9, 0x0b, 0x58, 0x3f, 0xe1, 0x11, 0x8a, 0x6c, 0x7a, 0x8c,
	0x4a, 0xd1, 0x14, 0xc9, 0x36, 0xac, 0x48, 0x14, 0xdf, 0x14, 0x34, 0xc7, 0xae, 0xe3, 0x39, 0x7b,
	0xab, 0xd1, 0xb2, 0x44, 0x71, 0x42, 0x73, 0x24, 0x3b, 0xb0, 0x6a, 0xae, 0xd0, 0x70, 0xee, 0xba,
	0xf6, 0xce, 0xc4, 0x1e, 0x19, 0x9b, 0x10, 0x58, 0x50, 0xe5, 0xf8, 0x69, 0xb7, 0x63, 0xfd, 0xf6,
	0x6c, 0x7c, 0x63, 0x9e, 0x4c, 0xbb, 0x0b, 0x95, 0xcf, 0x9c, 0xfd, 0x1f, 0x61, 0xbd, 0x2a, 0xc5,
	0x8a, 0x74, 0xc4, 0xcf, 0xb1, 0x20, 0xeb, 0xe0, 0xb2, 0xa4, 0xae, 0xe5, 0xb2, 0xc4, 0x64, 0xe9,
	0xa9, 0xc0, 0xba, 0x82, 0x3d, 0x93, 0x1e, 0xac, 0x88, 0x8c, 0xea, 0x33, 0x2e, 0xf3, 0xba, 0xc2,
	0xdc, 0x26, 0xef, 0xc2, 0xa2, 0x36, 0x40, 0x75, 0x99, 0xca, 0x20, 0x9b, 0xb0, 0x94, 0xf0, 0x9c,
	0xb2, 0xa2, 0xbb, 0x68, 0xdd, 0xb5, 0xe5, 0xbf, 0x70, 0x61, 0xed, 0xb4, 0x54, 0x93, 0x08, 0x9f,
	0x95, 0xa8, 0x74, 0x23, 0xce, 0x69, 0xc6, 0x19, 0xbf, 0xa6, 0x32, 0x45, 0x5d, 0xf3, 0xa8, 0x2d,
	0xe2, 0xc3, 0x5b, 0xcd, 0xf7, 0xb2, 0x6c, 0x56, 0xa2, 0x2b, 0x3e, 0xcb, 0x88, 0xe9, 0x0c, 0xe7,
	0x8c, 0x8c, 0x31, 0x9f, 0xc6, 0xe2, 0xe5, 0x34, 0x4c, 0x15, 0x96, 0xa7, 0x4f, 0x64, 0xd6, 0x5d,
	0xaa, 0xaa, 0x54, 0x16, 0x79, 0x08, 0x0b, 0x09, 0xd5, 0xb4, 0xbb, 0xec, 0x75, 0xf6, 0xd6, 0x86,
	0x77, 0x83, 0x1b, 0xd7, 0x24, 0x68, 0xf4, 0x11, 0x7c, 0x46, 0x35, 0x3d, 0x2a, 0xb4, 0x9c, 0x46,
	0x36, 0xb3, 0x77, 0x1f, 0x56, 0xe7, 0x2e, 0xb2, 0x01, 0x9d, 0x73, 0x9c, 0xd6, 0x1d, 0x9a, 0xa3,
	0xa1, 0x78, 0x41, 0xb3, 0x72, 0x36, 0xe5, 0xca, 0x38, 0x70, 0x1f, 0x38, 0x7e, 0x0e, 0xef, 0x9c,
	0x34, 0x2a, 0x3d, 0x46, 0xad, 0x59, 0x91, 0x1a, 0xa6, 0xa5, 0x42, 0xf9, 0xf9, 0xec, 0xa5, 0x6a,
	0x8b, 0xec, 0xc2, 0xaa, 0x90, 0x3c, 0xe7, 0x76, 0x18, 0xae, 0x1d, 0xc6, 0xa5, 0x83, 0x78, 0xb0,
	0xc6, 0x65, 0x82, 0xf2, 0xb1, 0xa6, 0xba, 0x54, 0xf5, 0xb0, 0x9a, 0x2e, 0xff, 0x01, 0x40, 0xdd,
	0xc2, 0xa3, 0xd1, 0xa9, 0x99, 0x51, 0x63, 0xf3, 0xec, 0xb9, 0xed, 0x25, 0xfc, 0xfb, 0xb0, 0xf6,
	0x25, 0xcd, 0x58, 0x42, 0x35, 0x9a, 0xd4, 0x0d, 0xe8, 0x70, 0x2d, 0x66, 0x3d, 0x72, 0x2d, 0x5a,
	0x13, 0x3f, 0x84, 0xdb, 0x8d, 0xc4, 0x08, 0x55, 0x99, 0xd9, 0x3d, 0x90, 0xf6, 0x64, 0x11, 0x56,
	0xa2, 0xda, 0x1a, 0xfe, 0xb9, 0x0c, 0x5b, 0xc7, 0x94, 0x65, 0x57, 0x67, 0x22, 0x2f, 0x58, 0x8c,
	0x24, 0x82, 0xb7, 0x15, 0x16, 0xc9, 0x4c, 0x41, 0x46, 0x06, 0x1f, 0xb4, 0x3c, 0xd5, 0x55, 0x95,
	0xf5, 0x36, 0x83, 0x4a, 0x95, 0xc1, 0x4c, 0x95, 0xc1, 0x91, 0x51, 0xa5, 0x7f, 0x8b, 0x14, 0xb0,
	0x6a, 0x30, 0x2b, 0x69, 0xb4, 0xa1, 0x5d, 0x55, 0x50, 0x2b, 0x9a, 0xff, 0xd3, 0xdf, 0xff, 0xfc,
	0xee, 0xee, 0xfa, 0x5b, 0xf6, 0x47, 0xd2, 0x84, 0x09, 0xad, 0x48, 0x0e, 0x9c, 0x3e, 0xf9, 0xd5,
	0x01, 0x48, 0x51, 0xcf, 0x9e, 0xb9, 0xdf, 0xca, 0xff, 0xda, 0x4a, 0xf4, 0xfe, 0x47, 0xac, 0xdf,
	0xb7, 0x54, 0xde, 0x27, 0xfe, 0x75, 0x2a, 0xaa, 0x0a, 0x09, 0xbf, 0xab, 0x36, 0xea, 0x07, 0xf2,
	0x8b, 0x03, 0xa0, 0xde, 0x3c, 0xa5, 0x3b, 0x96, 0xd2, 0x4e, 0x6f, 0xbb, 0x95, 0x12, 0xf9, 0x02,
	0x40, 0x94, 0x6a, 0x32, 0xe2, 0x4f, 0x14, 0x4a, 0xe2, 0xbf, 0x5a, 0x86, 0x2f, 0x79, 0xd8, 0xaf,
	0x60, 0xcb, 0x60, 0x35, 0x99, 0x8c, 0xf8, 0x88, 0x0b, 0x16, 0xbf, 0x26, 0xf0, 0x23, 0xd8, 0x90,
	0x73, 0x05, 0x0d, 0xab, 0xbf, 0xf1, 0x9d, 0x16, 0xc4, 0x4b, 0xa9, 0xbd, 0x04, 0xf0, 0x14, 0x6e,
	0x37, 0x00, 0x8f, 0xf9, 0x98, 0x65, 0xf8, 0x7a, 0x88, 0x5f, 0xc3, 0xda, 0x45, 0x43, 0xaa, 0x6d,
	0xfd, 0x36, 0x54, 0xd9, 0xdb, 0x7b, 0x75, 0x4c, 0xa5, 0x5c, 0xff, 0xd6, 0xe1, 0x5f, 0xee, 0x6f,
	0x9f, 0xfe, 0xec, 0x92, 0x17, 0x0e, 0x6c, 0x1b, 0x11, 0x7a, 0xcd, 0x2c, 0x4f, 0x55, 0x62, 0xf5,
	0xbf, 0x07, 0x3f, 0x45, 0xcd, 0xf4, 0x33, 0x8c, 0xbd, 0xbc, 0x2d, 0x8a, 0x1c, 0x4e, 0xb4, 0x16,
	0xea, 0x20, 0x0c, 0x53, 0xa6, 0x27, 0xe5, 0x38, 0x88, 0x79, 0x1e, 0xd2, 0x5c, 0xf1, 0x73, 0x9e,
	0x85, 0x29, 0x1f, 0xa4, 0x52, 0xc4, 0x03, 0x13, 0x32, 0x90, 0xa8, 0xf4, 0x20, 0x67, 0xb1, 0xe4,
	0x75, 0xea, 0x40, 0x97, 0x9a, 0x4b, 0x46, 0xb3, 0x1e, 0xc9, 0x31, 0x61, 0x65, 0xfe, 0xb0, 0xce,
	0x33, 0x18, 0xc3, 0xce, 0x47, 0xc1, 0xbd, 0xbe, 0xe3, 0x0e, 0x37, 0xa8, 0x10, 0xd9, 0x6c, 0xcd,
	0x9e, 0x2a, 0x5e, 0x1c, 0x5c, 0xf3, 0x44, 0x9f, 0x40, 0x67, 0xff, 0xde, 0x3e, 0xd9, 0x87, 0x7e,
	0x84, 0xba, 0x94, 0x05, 0x26, 0xde, 0xf3, 0x09, 0x16, 0x9e, 0x9e, 0xa0, 0x27, 0x51, 0xf1, 0x52,
	0xc6, 0xe8, 0x25, 0x1c, 0x95, 0x69, 0xc1, 0xc3, 0x6f, 0x99, 0xd2, 0x01, 0x59, 0x82, 0x85, 0x3f,
	0x5c, 0x67, 0x19, 0xfc, 0x98, 0xe7, 0xc1, 0xac, 0xd1, 0x9b, 0x67, 0x78, 0xd8, 0xf6, 0x43, 0x3b,
	0x75, 0xc6, 0x4b, 0x36, 0xe2, 0xe3, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x43, 0x4f, 0xb3, 0x6e,
	0xb1, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MailNotificationServiceClient is the client API for MailNotificationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MailNotificationServiceClient interface {
	// request response
	// see cmd/program/smtp.go for example
	SendNoReplyMail(ctx context.Context, in *NoReplyMessage, opts ...grpc.CallOption) (*empty.Empty, error)
	SendToken(ctx context.Context, in *MessagingToken, opts ...grpc.CallOption) (*empty.Empty, error)
	GetSetting(ctx context.Context, in *NotificationSetting, opts ...grpc.CallOption) (*NotificationSetting, error)
	SetSetting(ctx context.Context, in *NotificationSetting, opts ...grpc.CallOption) (*NotificationSetting, error)
	PushToUser(ctx context.Context, in *PushRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	PushNotificationToTopic(ctx context.Context, in *PushRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	RequestOTP2Email(ctx context.Context, in *RequestOTP, opts ...grpc.CallOption) (*empty.Empty, error)
	RequestOTP2Mobile(ctx context.Context, in *RequestOTP, opts ...grpc.CallOption) (*empty.Empty, error)
	ValidateOTP(ctx context.Context, in *ValidateOTP, opts ...grpc.CallOption) (*ValidateOTPResult, error)
}

type mailNotificationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMailNotificationServiceClient(cc grpc.ClientConnInterface) MailNotificationServiceClient {
	return &mailNotificationServiceClient{cc}
}

func (c *mailNotificationServiceClient) SendNoReplyMail(ctx context.Context, in *NoReplyMessage, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/mailnotificationproto.MailNotificationService/sendNoReplyMail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailNotificationServiceClient) SendToken(ctx context.Context, in *MessagingToken, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/mailnotificationproto.MailNotificationService/sendToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailNotificationServiceClient) GetSetting(ctx context.Context, in *NotificationSetting, opts ...grpc.CallOption) (*NotificationSetting, error) {
	out := new(NotificationSetting)
	err := c.cc.Invoke(ctx, "/mailnotificationproto.MailNotificationService/getSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailNotificationServiceClient) SetSetting(ctx context.Context, in *NotificationSetting, opts ...grpc.CallOption) (*NotificationSetting, error) {
	out := new(NotificationSetting)
	err := c.cc.Invoke(ctx, "/mailnotificationproto.MailNotificationService/setSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailNotificationServiceClient) PushToUser(ctx context.Context, in *PushRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/mailnotificationproto.MailNotificationService/pushToUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailNotificationServiceClient) PushNotificationToTopic(ctx context.Context, in *PushRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/mailnotificationproto.MailNotificationService/pushNotificationToTopic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailNotificationServiceClient) RequestOTP2Email(ctx context.Context, in *RequestOTP, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/mailnotificationproto.MailNotificationService/requestOTP2Email", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailNotificationServiceClient) RequestOTP2Mobile(ctx context.Context, in *RequestOTP, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/mailnotificationproto.MailNotificationService/requestOTP2Mobile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailNotificationServiceClient) ValidateOTP(ctx context.Context, in *ValidateOTP, opts ...grpc.CallOption) (*ValidateOTPResult, error) {
	out := new(ValidateOTPResult)
	err := c.cc.Invoke(ctx, "/mailnotificationproto.MailNotificationService/validateOTP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MailNotificationServiceServer is the server API for MailNotificationService service.
type MailNotificationServiceServer interface {
	// request response
	// see cmd/program/smtp.go for example
	SendNoReplyMail(context.Context, *NoReplyMessage) (*empty.Empty, error)
	SendToken(context.Context, *MessagingToken) (*empty.Empty, error)
	GetSetting(context.Context, *NotificationSetting) (*NotificationSetting, error)
	SetSetting(context.Context, *NotificationSetting) (*NotificationSetting, error)
	PushToUser(context.Context, *PushRequest) (*empty.Empty, error)
	PushNotificationToTopic(context.Context, *PushRequest) (*empty.Empty, error)
	RequestOTP2Email(context.Context, *RequestOTP) (*empty.Empty, error)
	RequestOTP2Mobile(context.Context, *RequestOTP) (*empty.Empty, error)
	ValidateOTP(context.Context, *ValidateOTP) (*ValidateOTPResult, error)
}

// UnimplementedMailNotificationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMailNotificationServiceServer struct {
}

func (*UnimplementedMailNotificationServiceServer) SendNoReplyMail(ctx context.Context, req *NoReplyMessage) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendNoReplyMail not implemented")
}
func (*UnimplementedMailNotificationServiceServer) SendToken(ctx context.Context, req *MessagingToken) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendToken not implemented")
}
func (*UnimplementedMailNotificationServiceServer) GetSetting(ctx context.Context, req *NotificationSetting) (*NotificationSetting, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSetting not implemented")
}
func (*UnimplementedMailNotificationServiceServer) SetSetting(ctx context.Context, req *NotificationSetting) (*NotificationSetting, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSetting not implemented")
}
func (*UnimplementedMailNotificationServiceServer) PushToUser(ctx context.Context, req *PushRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushToUser not implemented")
}
func (*UnimplementedMailNotificationServiceServer) PushNotificationToTopic(ctx context.Context, req *PushRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushNotificationToTopic not implemented")
}
func (*UnimplementedMailNotificationServiceServer) RequestOTP2Email(ctx context.Context, req *RequestOTP) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestOTP2Email not implemented")
}
func (*UnimplementedMailNotificationServiceServer) RequestOTP2Mobile(ctx context.Context, req *RequestOTP) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestOTP2Mobile not implemented")
}
func (*UnimplementedMailNotificationServiceServer) ValidateOTP(ctx context.Context, req *ValidateOTP) (*ValidateOTPResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateOTP not implemented")
}

func RegisterMailNotificationServiceServer(s *grpc.Server, srv MailNotificationServiceServer) {
	s.RegisterService(&_MailNotificationService_serviceDesc, srv)
}

func _MailNotificationService_SendNoReplyMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NoReplyMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailNotificationServiceServer).SendNoReplyMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mailnotificationproto.MailNotificationService/SendNoReplyMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailNotificationServiceServer).SendNoReplyMail(ctx, req.(*NoReplyMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _MailNotificationService_SendToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessagingToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailNotificationServiceServer).SendToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mailnotificationproto.MailNotificationService/SendToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailNotificationServiceServer).SendToken(ctx, req.(*MessagingToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _MailNotificationService_GetSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotificationSetting)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailNotificationServiceServer).GetSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mailnotificationproto.MailNotificationService/GetSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailNotificationServiceServer).GetSetting(ctx, req.(*NotificationSetting))
	}
	return interceptor(ctx, in, info, handler)
}

func _MailNotificationService_SetSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotificationSetting)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailNotificationServiceServer).SetSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mailnotificationproto.MailNotificationService/SetSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailNotificationServiceServer).SetSetting(ctx, req.(*NotificationSetting))
	}
	return interceptor(ctx, in, info, handler)
}

func _MailNotificationService_PushToUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailNotificationServiceServer).PushToUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mailnotificationproto.MailNotificationService/PushToUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailNotificationServiceServer).PushToUser(ctx, req.(*PushRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MailNotificationService_PushNotificationToTopic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailNotificationServiceServer).PushNotificationToTopic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mailnotificationproto.MailNotificationService/PushNotificationToTopic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailNotificationServiceServer).PushNotificationToTopic(ctx, req.(*PushRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MailNotificationService_RequestOTP2Email_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestOTP)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailNotificationServiceServer).RequestOTP2Email(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mailnotificationproto.MailNotificationService/RequestOTP2Email",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailNotificationServiceServer).RequestOTP2Email(ctx, req.(*RequestOTP))
	}
	return interceptor(ctx, in, info, handler)
}

func _MailNotificationService_RequestOTP2Mobile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestOTP)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailNotificationServiceServer).RequestOTP2Mobile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mailnotificationproto.MailNotificationService/RequestOTP2Mobile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailNotificationServiceServer).RequestOTP2Mobile(ctx, req.(*RequestOTP))
	}
	return interceptor(ctx, in, info, handler)
}

func _MailNotificationService_ValidateOTP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateOTP)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailNotificationServiceServer).ValidateOTP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mailnotificationproto.MailNotificationService/ValidateOTP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailNotificationServiceServer).ValidateOTP(ctx, req.(*ValidateOTP))
	}
	return interceptor(ctx, in, info, handler)
}

var _MailNotificationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mailnotificationproto.MailNotificationService",
	HandlerType: (*MailNotificationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "sendNoReplyMail",
			Handler:    _MailNotificationService_SendNoReplyMail_Handler,
		},
		{
			MethodName: "sendToken",
			Handler:    _MailNotificationService_SendToken_Handler,
		},
		{
			MethodName: "getSetting",
			Handler:    _MailNotificationService_GetSetting_Handler,
		},
		{
			MethodName: "setSetting",
			Handler:    _MailNotificationService_SetSetting_Handler,
		},
		{
			MethodName: "pushToUser",
			Handler:    _MailNotificationService_PushToUser_Handler,
		},
		{
			MethodName: "pushNotificationToTopic",
			Handler:    _MailNotificationService_PushNotificationToTopic_Handler,
		},
		{
			MethodName: "requestOTP2Email",
			Handler:    _MailNotificationService_RequestOTP2Email_Handler,
		},
		{
			MethodName: "requestOTP2Mobile",
			Handler:    _MailNotificationService_RequestOTP2Mobile_Handler,
		},
		{
			MethodName: "validateOTP",
			Handler:    _MailNotificationService_ValidateOTP_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mailnotification.proto",
}
